# -*- coding: utf-8 -*-
"""Задачи тест mindbox.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g7LgDnbcJCkiDc8Y2nnGhgFlfwlBbqz9

Практическое задание 1.
Задание:

Напишите на C# или Python библиотеку для поставки внешним клиентам, которая умеет вычислять площадь круга по радиусу и треугольника по трем сторонам.

Дополнительно к работоспособности оценим:
- Юнит-тесты
- Легкость добавления других фигур
- Вычисление площади фигуры без знания типа фигуры в compile-time
- Проверку на то, является ли треугольник прямоугольным
"""

import math

# Базовый класс для всех фигур
class Shape:
    def area(self):
        raise NotImplementedError("Нужно реализовать метод area()")

# Класс круга
class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return math.pi * self.radius ** 2

# Класс треугольника
class Triangle(Shape):
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c

    def area(self):
        p = (self.a + self.b + self.c) / 2
        return math.sqrt(p * (p - self.a) * (p - self.b) * (p - self.c))

    def is_right(self):
        sides = sorted([self.a, self.b, self.c])
        return math.isclose(sides[2]**2, sides[0]**2 + sides[1]**2)

# Функция для вычисления площади любой фигуры
def compute_area(shape):
    return shape.area()

# Пример использования
circle = Circle(5)
triangle = Triangle(3, 4, 5)

print("Площадь круга:", compute_area(circle))              # 78.53981633974483
print("Площадь треугольника:", compute_area(triangle))    # 6.0
print("Треугольник прямоугольный?", triangle.is_right())  # True

"""Практическое задание 2.
В PySpark приложении датафреймами (pyspark.sql.DataFrame) заданы продукты, категории и их связи. Каждому продукту может соответствовать несколько категорий или ни одной. А каждой категории может соответствовать несколько продуктов или ни одного. Напишите метод на PySpark, который в одном датафрейме вернет все пары «Имя продукта – Имя категории» и имена всех продуктов, у которых нет категорий. Напишите тесты на ваш метод.

Для задания с PySpark нужно сделать объединение двух датафреймов продуктов и категорий так, чтобы вернуть:

Все пары "Имя продукта — Имя категории" (соответствия продуктов и категорий)

Все имена продуктов без категорий (чтобы не потерять продукты без связей)

Идеальный вариант — сделать Left Join продуктов с категориями по ключу и при этом сохранить продукты без категорий.

Примерная структура данных:

Датафрейм продуктов: product_id, product_name

Датафрейм категорий: category_id, category_name

Датафрейм связей: product_id, category_id
"""

from pyspark.sql import DataFrame

def get_product_category_pairs(products: DataFrame, categories: DataFrame, product_category_links: DataFrame) -> DataFrame:
    # Сначала соединяем product_category_links с категориями по category_id
    links_with_cat = product_category_links.join(categories, "category_id", "left")

    # Потом соединяем все продукты с этими связями по product_id, оставляя все продукты (Left Join)
    result = products.join(links_with_cat, "product_id", "left") \
                     .select("product_name", "category_name")

    return result